
/**
 * @fileOverview A Genkit tool to fetch details for a Common Weakness Enumeration (CWE) ID.
 * This tool is intended to be used when an AI code analysis (like in `code-quality-analysis.ts`)
 * identifies a potential CWE *pattern* within the provided code itself.
 *
 * IMPORTANT: This tool DOES NOT scan project dependencies (e.g., package.json, pom.xml) for
 * known Common Vulnerabilities and Exposures (CVEs) in third-party libraries. Dependency scanning
 * is a separate type of security analysis typically handled by dedicated tools like npm audit,
 * Snyk, trivy, etc., and is not part of this tool's functionality.
 *
 * This tool currently returns mocked data for CWEs. In a real implementation for canonical CWE details,
 * it would ideally query a comprehensive CWE database (like MITRE's official data).
 * The NVD API (GET /rest/json/cves/2.0) is primarily for CVEs (specific vulnerability instances)
 * and can be queried by CWE to find related CVEs, but doesn't directly serve canonical CWE names/descriptions.
 *
 * - fetchCveDetailsTool - The Genkit tool definition.
 * - CveDetailsInput - Input schema for the tool.
 * - CveDetailsOutput - Output schema for the tool.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

export const CveDetailsInputSchema = z.object({
  cweId: z.string().describe('The Common Weakness Enumeration (CWE) identifier, e.g., "CWE-79".'),
});
export type CveDetailsInput = z.infer<typeof CveDetailsInputSchema>;

export const CveDetailsOutputSchema = z.object({
  cweId: z.string().describe('The CWE identifier.'),
  name: z.string().describe('The common name of the weakness.'),
  description: z.string().describe('A detailed description of the weakness.'),
  url: z.string().url().optional().describe('A URL for more information about the CWE (e.g., NVD or MITRE).'),
});
export type CveDetailsOutput = z.infer<typeof CveDetailsOutputSchema>;

// Enhanced Mock Data
const cweMockData: Record<string, CveDetailsOutput> = {
  'CWE-79': {
    cweId: 'CWE-79',
    name: "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    description: 'The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.',
    url: 'https://cwe.mitre.org/data/definitions/79.html',
  },
  'CWE-89': {
    cweId: 'CWE-89',
    name: "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    description: 'The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly newutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.',
    url: 'https://cwe.mitre.org/data/definitions/89.html',
  },
  'CWE-22': {
    cweId: 'CWE-22',
    name: "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    description: 'The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.',
    url: 'https://cwe.mitre.org/data/definitions/22.html',
  },
  'CWE-125': {
    cweId: 'CWE-125',
    name: "Out-of-bounds Read",
    description: 'The software reads data past the end, or before the beginning, of the intended buffer.',
    url: 'https://cwe.mitre.org/data/definitions/125.html',
  },
  'CWE-20': {
    cweId: 'CWE-20',
    name: "Improper Input Validation",
    description: 'The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.',
    url: 'https://cwe.mitre.org/data/definitions/20.html',
  },
  'CWE-416': {
    cweId: 'CWE-416',
    name: "Use After Free",
    description: 'Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.',
    url: 'https://cwe.mitre.org/data/definitions/416.html',
  },
  'CWE-787': {
    cweId: 'CWE-787',
    name: "Out-of-bounds Write",
    description: 'The software writes data past the end, or before the beginning, of the intended buffer.',
    url: 'https://cwe.mitre.org/data/definitions/787.html',
  },
  'CWE-798': {
    cweId: 'CWE-798',
    name: "Use of Hard-coded Credentials",
    description: "The software contains hard-coded credentials, such as a password or cryptographic key, that are used for authentication or other security-critical operations. This can make it easier for attackers to compromise the system if they can obtain the software's code or binaries.",
    url: 'https://cwe.mitre.org/data/definitions/798.html',
  },
};

export const fetchCveDetailsTool = ai.defineTool(
  {
    name: 'fetchCveDetails',
    description: 'Fetches detailed information for a given Common Weakness Enumeration (CWE) ID. Use this to provide more context on identified security weaknesses (like CWE name, description, and a reference URL) found *within the analyzed code*. This tool does NOT scan project dependencies for CVEs.',
    inputSchema: CveDetailsInputSchema,
    outputSchema: CveDetailsOutputSchema,
  },
  async (input) => {
    console.log(`[fetchCveDetailsTool] Received request for CWE: ${input.cweId}`);
    
    const details = cweMockData[input.cweId.toUpperCase()]; // Ensure case-insensitivity for lookup
    if (details) {
      return details;
    }

    // Fallback for unmocked CWEs
    console.warn(`[fetchCveDetailsTool] No mock data for CWE: ${input.cweId}. Returning generic placeholder.`);
    return {
      cweId: input.cweId.toUpperCase(),
      name: `Details for ${input.cweId.toUpperCase()}`,
      description: `Detailed information for ${input.cweId.toUpperCase()} would be fetched from a CWE database like MITRE. This is placeholder data. This tool is for CWEs in code, not CVEs in dependencies.`,
      url: `https://cwe.mitre.org/data/definitions/${input.cweId.toUpperCase().replace('CWE-', '')}.html`,
    };
  }
);

